/*
 * Copyright 2025 The Go-Spring Authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      https://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package golang

import (
	"bytes"
	"maps"
	"path/filepath"
	"slices"
	"text/template"

	"github.com/lvan100/errutil"
)

// validateTmpl is a Go template for generating default validation functions.
var validateTmpl = template.Must(template.New("validate").Parse(`
// Code generated by gs-http-gen compiler. DO NOT EDIT.

package {{.Package}}

{{- range $f := .Funcs}}
// {{$f.Name}} is a default validation function for fields of type {{$f.FieldType}}.
// This serves as a placeholder that can be overridden or extended.
var {{$f.Name}} = func ({{$f.FieldType}}) bool { return true }
{{- end}}
`))

// genValidate generates the Go file containing default validation functions.
func (g *Generator) genValidate(ctx Context) error {

	// Sort the functions by name
	var funcs []ValidateFunc
	for _, s := range slices.Sorted(maps.Keys(ctx.funcs)) {
		funcs = append(funcs, ctx.funcs[s])
	}

	buf := &bytes.Buffer{}
	err := validateTmpl.Execute(buf, map[string]any{
		"Package": ctx.config.GoPackage,
		"Funcs":   funcs,
	})
	if err != nil {
		return errutil.Explain(nil, "execute template error: %w", err)
	}
	fileName := ctx.meta.Name + "_validate.go"
	fileName = filepath.Join(ctx.config.OutputDir, fileName)
	return formatFile(fileName, buf.Bytes())
}
