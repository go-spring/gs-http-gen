// Code generated by gs-gen compiler. DO NOT EDIT.

package proto

import (
	"context"
	"encoding/json"
	"io"
	"net/http"
)

type ManagerServer interface {
	GetManager(context.Context, *ManagerReq) *ResponseManager
}

func InitRouter(mux *http.ServeMux, server ManagerServer) {
	mux.HandleFunc("GET /user", JSON(server.GetManager))
}

func ReadRequest(r *http.Request, i interface{}) error {
	b, err := io.ReadAll(r.Body)
	if err != nil {
		return err
	}
	if len(b) == 0 {
		return nil
	}
	return json.Unmarshal(b, i)
}

func WriteResponse(w http.ResponseWriter, i interface{}) {
	b, err := json.Marshal(i)
	if err != nil {
		http.Error(w, err.Error(), http.StatusInternalServerError)
		return
	}
	if _, err = w.Write(b); err != nil {
		return
	}
}

func JSON[Req interface{ New() any }, Resp any](h func(context.Context, Req) Resp) http.HandlerFunc {
	var x Req
	return func(w http.ResponseWriter, r *http.Request) {
		req := x.New().(Req)
		if err := ReadRequest(r, req); err != nil {
			WriteResponse(w, err)
			return
		}
		res := h(r.Context(), req)
		WriteResponse(w, res)
	}
}
