// Code generated by gs-http-gen compiler. DO NOT EDIT.

package proto

import (
	"context"
	"net/http"
)

// ManagerServer defines the interface that service must implement.
type ManagerServer interface {
	// Create a new manager
	CreateManager(context.Context, *CreateManagerReq) *CreateManagerResp
	// Delete a manager
	DeleteManager(context.Context, *ManagerReq) *DeleteManagerResp
	// Get manager by ID
	GetManager(context.Context, *ManagerReq) *GetManagerResp
	// List managers with pagination
	ListManagersByPage(context.Context, *ListManagersByPageReq) *ListManagersByPageResp
	Stream(context.Context, *StreamReq, chan<- *StreamResp)
	// Update manager info
	UpdateManager(context.Context, *UpdateManagerReq) *UpdateManagerResp
}

// InitRouter registers the service handlers into the given *http.ServeMux.
func InitRouter(mux *http.ServeMux, server ManagerServer) {
	mux.HandleFunc("POST /managers", HandleJSON(server.CreateManager))
	mux.HandleFunc("DELETE /managers/{id}", HandleJSON(server.DeleteManager))
	mux.HandleFunc("GET /managers/{id}", HandleJSON(server.GetManager))
	mux.HandleFunc("GET /managers/page", HandleJSON(server.ListManagersByPage))
	mux.HandleFunc("GET /stream", HandleStream(server.Stream))
	//mux.HandleFunc("PUT /managers/{id}", HandleJSON(server.UpdateManager))
}
